// <auto-generated />
using System;
using EF.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190514131153_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF.DataAccess.DataModel.MenuDO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hyperlink");

                    b.Property<string>("Image");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("EF.DataAccess.DataModel.OrderDO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details");

                    b.Property<bool>("IsActive");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StoreId");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EF.DataAccess.DataModel.SessionDO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("Duration");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("EF.DataAccess.DataModel.StoreDO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClosingTime");

                    b.Property<int?>("MenuId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OpeningTime");

                    b.Property<int?>("SessionId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("SessionId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("EF.DataAccess.DataModel.UserDO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EF.DataAccess.DataModel.OrderDO", b =>
                {
                    b.HasOne("EF.DataAccess.DataModel.StoreDO", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId");

                    b.HasOne("EF.DataAccess.DataModel.UserDO", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EF.DataAccess.DataModel.StoreDO", b =>
                {
                    b.HasOne("EF.DataAccess.DataModel.MenuDO", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("EF.DataAccess.DataModel.SessionDO", "Session")
                        .WithMany("ActiveStores")
                        .HasForeignKey("SessionId");
                });
#pragma warning restore 612, 618
        }
    }
}
